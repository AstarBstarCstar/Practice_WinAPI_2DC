#include "framework.h"
#include "Bullet.h"

Bullet::Bullet()
{
	m_fTheta = PI/2.f;//항상 파이가 180도 인걸 생각하고, 세타가 0도 = 우측으로 이동하겠단 소리. 이유: 우측이동시 (1000 x cos 0) 이것이 1초뒤 x위치  (1000 x sin 0) 1초뒤 y 위치   cos 0 = 1  sin 0 = 0   단위원 생각해보라.
	m_Dir = (fPoint(0.f, 1.f)); // 벡터값을 이용하여 만든 좌표값
	m_Dir.Nomalize();
}
Bullet::~Bullet()
{
}


void Bullet::Update()
{

		fPoint Pos = GetPos();

		Pos.x += 1000.f * m_Dir.x * fDT;//코사인각도 1초뒤 이동위치
		Pos.y += 1000.f * m_Dir.y * fDT;
		SetPos(Pos);

}

void Bullet::Render(HDC _dc)
{
	fPoint pospos=GetPos();
	fPoint scasca=GetScale();
	Ellipse(_dc,
		pospos.x - scasca.x / 2,
		pospos.y - scasca.y / 2,
		pospos.x + scasca.x / 2,
		pospos.y + scasca.y / 2);
}



/*
라디안 = 비율
반지름 x 3.14 = 원의 둘레의 절반 ( 지름 x 3.14=원둘레)
이것을 각도로 보겠다.(한바퀴의 절반) 이각도를 파이로 본다.
파이 = 3.14... 전체 각도의 절반으로 본다.
반지름에게 이 값을 곱해지면 둘레 절반의 값이 나온다.
ㄴ반지름 x 반지름 x 3.14 원의 둘레  ,    반지름 x 3.14 원의 반둘레.

그래서 반지름과 둘레 사이를 각도로 보고 있는것이 라디안이라는 각도.
파이 라디안 = 3.14라디안. (180도)
그러면 1라디안? =   1 x r = r  -> "반지름이 r이 나올 때 호의 길이가 r 이 나올때의 각도."  (57도쯤)
따라서 라디안이란 삼각함수에서 사용하는 각도(각도이자 호의 비율값이기 때문에 바로 연산가능)

단위원: 반지름의 길이가 1인 원
단위원에서 원의 호 테두리를 돌고있는 좌표들은 삼각함수의 비율값 cos, sin 가지고 윈의 위치 좌표라 할 수있다.(단 세타를 알아야 함.)

특정 방향으로 내 속도를 유지한 채로 가려면 x축과 y축은 얼마만큼 이동해야 하는가?
ex 오른쪽으로 갈 땐 100*dt만큼 속도로 45도 방향으로 100 가려면?
문제점:단순히 x+100 y+100 하면 45% 더 빠르게 이동한다.
해결법: 내 이동속도 100이고, 45도 방향으로 100만큼 가고 싶다면,
아까 단위원을 생각 해 보면, 반지름 1일 경우, Cos45, Sin45 좌표가 나옴.
그걸 유지하고 100만큼 더 가고 싶다면, 각각 100을 곱해주면 되지 않을까?
따라서 (cos45 * 100 * DT , sin45 * 100 * DT

파이 / 4 => 180/4 = 45도쯤      파이 = 180도 인걸 생각 할것
*/

/*
벡터 <=> 스칼라
스칼라는 순수한크기 값을 의미
벡터는 크기, 방향성을 의미
ex) 0,0 기준으로 3,2라는 벡터가 있을 때, 원점에서 해당 좌표로 이동 할 때 길이 값을 의미함. 즉 (3,2) 라는 벡터는   루트9+4 라는 길이값과  x로3갈때 y로는 2 가는 방향정보 (좌표 성분이 곧 각도)
45도를 벡터로 치면 x로 1 갈때 y로 1 (1,1)를 각도로 치면 45도 아닌가?  => (cos45,sin45)
따라서 방향을 유지한 채로 1이 되려면, (1,1,1) 이 되려면, 이때 x,y 좌표는 cos45 sin45가 될것이다.
단위원일때를 생각해 보라.
*/